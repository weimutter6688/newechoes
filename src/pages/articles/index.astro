---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Layout from '@/components/Layout.astro';
import { SITE_NAME } from '@/consts';

// 获取技术分类 - Note: This might need adjustment based on the new 'tech' structure if needed elsewhere
function getTechCategory(slug: string): string {
  const parts = slug.split('/');
  // Assumes slug format is 'category/subcat/../filename' after removing 'tech/'
  return parts[0] || "Technology"; 
}

// 获取所有文章 from the correct collection
const articles = await getCollection('tech'); 
const sortedArticles = articles.sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

// 按分类组织文章 - Adjusted to use slug for category
const articlesByCategory = sortedArticles.reduce((acc, article) => {
  const category = getTechCategory(article.slug.replace(/^tech\//, '')); // Use slug for category
  if (!acc[category]) acc[category] = [];
  acc[category].push(article);
  return acc;
}, {} as Record<string, CollectionEntry<'tech'>[]>);

// 获取热门标签
const allTags = articles.flatMap(article => article.data.tags || []);
const tagCount = allTags.reduce((acc, tag) => {
  acc[tag] = (acc[tag] || 0) + 1;
  return acc;
}, {} as Record<string, number>);

const popularTags = Object.entries(tagCount)
  .sort(([,a], [,b]) => b - a)
  .slice(0, 10)
  .map(([tag]) => tag);

// 构建站点导航结构化数据 - URLs might need updating if category pages change
const siteNavigationSchema = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  "itemListElement": [
    {
      "@type": "SiteNavigationElement",
      "position": 1,
      "name": "Windows技术",
      "description": "Windows系统管理、PowerShell脚本等技术教程",
      "url": "/articles/category/windows" // Assuming category pages still exist at this path
    },
    {
      "@type": "SiteNavigationElement",
      "position": 2,
      "name": "Linux技术",
      "description": "Linux系统管理、Shell脚本等技术教程",
      "url": "/articles/category/linux" // Assuming category pages still exist at this path
    },
    {
      "@type": "SiteNavigationElement",
      "position": 3,
      "name": "Python开发",
      "description": "Python编程、自动化脚本等技术教程",
      "url": "/articles/category/python" // Assuming category pages still exist at this path
    },
    {
      "@type": "SiteNavigationElement",
      "position": 4,
      "name": "DevOps实践",
      "description": "自动化运维、容器化等技术教程",
      "url": "/articles/category/devops" // Assuming category pages still exist at this path
    }
  ]
};

// 构建技术文档列表结构化数据
const techArticlesSchema = {
  "@context": "https://schema.org",
  "@type": "TechArticle",
  "headline": "技术文档库",
  "description": "包含Windows、Linux、Python和自动化运维等技术教程",
  "keywords": popularTags.join(", "),
  "author": {
    "@type": "Organization",
    "name": SITE_NAME
  },
  "publisher": {
    "@type": "Organization",
    "name": SITE_NAME
  },
  "mainEntity": {
    "@type": "ItemList",
    "itemListElement": sortedArticles.slice(0, 10).map((article, index) => {
      // Generate correct URL using slug and removing 'tech/' prefix
      const articleUrlPath = article.slug.replace(/^tech\//, ''); 
      return {
        "@type": "ListItem",
        "position": index + 1,
        "item": {
          "@type": "TechArticle",
          "headline": article.data.title,
          "datePublished": article.data.date.toISOString(),
          "author": article.data.author || SITE_NAME,
          "url": `/articles/${articleUrlPath}` // Correct URL generation
        }
      };
    })
  }
};
---

<Layout 
  title="技术文档库 - 技术教程和最佳实践"
  description="提供Windows、Linux、Python和自动化运维等领域的技术教程、最佳实践和经验分享"
>
  <div class="max-w-7xl mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-8">技术文档库</h1>

    <!-- 技术分类导航 -->
    <nav class="mb-12 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
      {Object.entries(articlesByCategory).map(([category, categoryArticles]) => (
        <a 
          href={`/articles/category/${category.toLowerCase()}`} // Assuming category pages still exist
          class="p-4 bg-white dark:bg-gray-800 rounded-lg shadow hover:shadow-lg transition-shadow"
        >
          <h2 class="text-xl font-bold mb-2">{category}</h2>
          <p class="text-sm text-gray-600 dark:text-gray-400">
            {categoryArticles.length} 篇技术文章
          </p>
        </a>
      ))}
    </nav>

    <!-- 最新技术文章 -->
    <section class="mb-12">
      <h2 class="text-2xl font-bold mb-6">最新技术教程</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {sortedArticles.slice(0, 6).map(article => {
          // Generate correct URL using slug and removing 'tech/' prefix
          const articleUrlPath = article.slug.replace(/^tech\//, ''); 
          return (
            <article class="bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden">
              <a 
                href={`/articles/${articleUrlPath}`} // Correct URL generation
                class="block p-6 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"
              >
                <h3 class="text-xl font-bold mb-2 line-clamp-2">{article.data.title}</h3>
                <time class="text-sm text-gray-500 block mb-2">
                  {article.data.date.toLocaleDateString('zh-CN')}
                </time>
                {article.data.summary && (
                  <p class="text-gray-600 dark:text-gray-400 line-clamp-2">
                    {article.data.summary}
                  </p>
                )}
                {article.data.tags && (
                  <div class="mt-4 flex flex-wrap gap-2">
                    {article.data.tags.map(tag => (
                      <span class="px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 rounded">
                        {tag}
                      </span>
                    ))}
                  </div>
                )}
              </a>
            </article>
          );
        })}
      </div>
    </section>

    <!-- 技术主题标签 -->
    <section class="mb-12">
      <h2 class="text-2xl font-bold mb-6">热门技术主题</h2>
      <div class="flex flex-wrap gap-3">
        {popularTags.map(tag => (
          <a
            href={`/articles/tag/${tag}`} // Assuming tag pages still exist
            class="px-4 py-2 bg-primary-50 dark:bg-primary-900/30 text-primary-700 dark:text-primary-300 rounded-full hover:bg-primary-100 dark:hover:bg-primary-800/30 transition-colors"
          >
            {tag}
          </a>
        ))}
      </div>
    </section>

    <!-- 结构化数据 -->
    <script type="application/ld+json" set:html={JSON.stringify(siteNavigationSchema)} />
    <script type="application/ld+json" set:html={JSON.stringify(techArticlesSchema)} />
  </div>
</Layout>