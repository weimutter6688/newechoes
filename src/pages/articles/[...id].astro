---
import { getCollection } from 'astro:content';
import Layout from '@/components/Layout.astro';
import Breadcrumb from '@/components/Breadcrumb.astro';
import { SITE_NAME } from '@/consts';

export const prerender = true;

export async function getStaticPaths() {
  const entries = await getCollection('tech');
  return entries.map(entry => {
    // Remove 'tech/' prefix from the slug to create the URL path
    const urlPath = entry.slug.replace(/^tech\//, '');
    return {
      params: { id: urlPath },
      props: { entry },
    };
  });
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// 准备面包屑导航
const pathParts = entry.slug.replace(/^tech\//, '').split('/');
const category = pathParts[0];

// 构建技术文章的Schema.org数据
const schemaData = {
  "@context": "https://schema.org",
  "@type": "TechArticle",
  "headline": entry.data.title,
  "description": entry.data.summary || "",
  "datePublished": entry.data.date?.toISOString(),
  "author": {
    "@type": "Person",
    "name": entry.data.author || SITE_NAME
  },
  "publisher": {
    "@type": "Organization",
    "name": SITE_NAME
  },
  "keywords": entry.data.tags?.join(", "),
  "inLanguage": "zh-CN",
  "articleSection": category,
  "technicalAudience": "Software Developers, System Administrators, DevOps Engineers"
};
---

<Layout 
  title={entry.data.title}
  description={entry.data.summary}
  date={entry.data.date}
  author={entry.data.author}
  tags={entry.data.tags}
  image={entry.data.image}
  isArticle={true}
  category={category}
>
  <div class="max-w-4xl mx-auto px-4 py-8">
    <nav class="mb-8">
      <Breadcrumb
        pageType="article"
        pathSegments={pathParts.slice(0, -1)}
        articleTitle={entry.data.title}
      />
    </nav>

    <article class="prose prose-lg dark:prose-invert max-w-none">
      <header class="mb-8">
        <h1 class="text-4xl font-bold mb-4">{entry.data.title}</h1>
        <div class="flex flex-wrap items-center gap-4 text-gray-600 dark:text-gray-400">
          <time datetime={entry.data.date?.toISOString()} class="text-sm">
            {entry.data.date?.toLocaleDateString('zh-CN')}
          </time>
          {entry.data.tags && (
            <div class="flex flex-wrap gap-2">
              {entry.data.tags.map(tag => (
                <a 
                  href={`/articles/tag/${tag}`}
                  class="text-sm hover:text-primary-600 transition-colors"
                >
                  #{tag}
                </a>
              ))}
            </div>
          )}
        </div>
      </header>

      <div class="markdown-content">
        <Content />
      </div>

      {entry.data.tags && (
        <footer class="mt-12 pt-6 border-t border-gray-200 dark:border-gray-700">
          <h2 class="text-xl font-bold mb-4">相关技术</h2>
          <div class="flex flex-wrap gap-2">
            {entry.data.tags.map(tag => (
              <a
                href={`/articles/tag/${tag}`}
                class="px-4 py-2 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-full text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors"
              >
                #{tag}
              </a>
            ))}
          </div>
        </footer>
      )}
    </article>

    <script type="application/ld+json" set:html={JSON.stringify(schemaData)} />
  </div>
</Layout>